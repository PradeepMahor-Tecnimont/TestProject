@model MGMTApp.WebApp.Models.PersonViewModel
@{
    ViewData["Title"] = "Person";
}

@Html.AntiForgeryToken()

@section BreadCrumbs
{

    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="index.html">Home</a></li>
        <li class="breadcrumb-item active">Person</li>
    </ol>
}

@section Styles {

}

@*<h1>Person</h1>*@

<section class="section">
    <div class="row">

        <div class="col-lg-12">

            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">
                        Person
                    </h5>

                    <!-- Floating Labels Form -->
                    <form class="row g-3">
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="floatingName" placeholder="Your Name">
                                <label for="floatingName">Your Name</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input type="email" class="form-control" id="floatingEmail" placeholder="Your Email">
                                <label for="floatingEmail">Your Email</label>
                            </div>
                        </div>

                        <div class="col-12">
                            <div class="form-floating">
                                <textarea class="form-control" placeholder="Address" rows="2"
                                          id="floatingTextarea" style="height: 100px;"></textarea>
                                <label for="floatingTextarea">Address</label>
                            </div>
                        </div>

                        <div class="text-center">
                            <button type="submit" class="btn btn-primary">Submit</button>
                            <button type="reset" class="btn btn-secondary">Reset</button>
                        </div>
                    </form><!-- End floating Labels Form -->
                </div>
            </div>
        </div>
    </div>
</section>

<div class="row">
    <div class="col-lg-12">

        <div class="card">
            <div class="card-body">
                <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
                    <thead class="bg-info text-white">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.FullName)</th>
                            <th>@Html.DisplayNameFor(model => model.Email)</th>
                            <th>@Html.DisplayNameFor(model => model.Address)</th>
                            @*<th>&nbsp;</th>
                                <th>&nbsp;</th>*@
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts{

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            loadDataTable();

        function localScript() {
          /*  initSelect2();*/
        }

        function loadDataTableOld() {
            $('#tbGrid').DataTable({
                drawCallback: function (settings) {
                    loadScript();
                },
                destroy: true,
                pageLength: 25,
                responsive: true,
                autoWidth: false,
                lengthMenu: [25,50],
                processing: true,
                serverSide: true,
                stateSave: true,
                info: false,
                filter: false,
                layout: {topStart: null,bottomStart: 'pageLength',bottomEnd: 'paging'},
                ordering: false,
                columns: [
                    @*{
                        data: null,
                        render: function (data, type, row) {
                            return '<button title="Edit" class="btn btn-outline-primary btn-sm border-none" ' +
                                    ' data-jqueryselector="openmodal" ' +
                                    ' data-modalcontainer="modalcontainer" '+
                                    ' data-url="@Url.Action("DeskBlockEdit", "DMS", new { Area = "DMS" })"' +
                                    ' data-modalpopupwidth="rightw35" ' +
                                    ' data-id="' + data.id + '"' +
                                    ' data-modaltitle="Edit desk block" ' +
                                    ' data-modalheader="Edit desk block" >' +
                                    ' <i class="fas fa-edit" aria-hidden="true"></i> ' +
                                    ' </button>';
                        },
                        className: "td-icon",
                    },*@
                    { 'data': "fullName" },
                    { 'data': "email" },
                    { 'data': "address" },
                    @*{
                        data: null,
                        render: function (data, type, row) {
                            return '<button title="Edit" class="btn btn-outline-primary btn-sm border-none" ' +
                            ' data-jqueryselector="openmodal" ' +
                            ' data-modalcontainer="modalcontainer" '+
                            ' data-url="@Url.Action("DMSGuestMasterEdit", "DMS", new { Area = "DMS" })"' +
                            ' data-modalpopupwidth="rightw35" ' +
                                ' data-guestEmpno="' + data.id + '"' +
                            ' data-modaltitle="Guest master edit" ' +
                            ' data-modalheader="Guest master edit" >' +
                            ' <i class="fas fa-edit" aria-hidden="true"></i> ' +
                                ' </button>';
                        },
                        className: "td-icon",
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return ' <button class="btn btn-outline-danger btn-sm border-none " ' +
                                ' onclick = "showDeleteConfirmationPopup(event,this);" ' +
                                ' data-jqueryselector = "showconfirmationmodal" ' +
                                ' data-url="@Url.Action("DeskBlockDelete", "DMS", new { Area = "DMS" })"' +
                                ' data-id="' + data.id + '"' +
                                ' data-redirecturl="@Url.Action("DeskBlockIndex", "DMS", new { Area = "DMS" })"' +
                                ' data-modaltitle="Please Confirm!" ' +
                                ' data-confirmationtext=\'Do you want to unblock desk "' + data.id + '" ?\' ' +
                                ' data-confirmationtype="warning" ' +
                                ' data-confirmbuttontext="Unblock desk" > ' +
                                ' <i class="fas fa-trash" aria-hidden="true"></i> ' +
                                ' </button>' ;

                        },
                        className: "td-icon",
                    }*@
                ] ,
                ajax: {
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    url: '@Url.Action("GetListsPerson", "Person")',
                    type: 'GET',
                    cache: true,
                    dataType: "json",
                    data: function (d) {
                        d.columns = null;
                        d.order = null;
                        d.search = null;
                        d.genericSearch = $('#GenericSearch').val();
                    },
                    error: function (request, status, error) {
                        notify('error', request.responseText, 'danger');
                    }
                }
            });
        };

        function loadDataTable() {
            let datatableColumns = [
            { 'data': "fullName" },
            { 'data': "email" },
            { 'data': "address" }
        ];
            let vPersonDataTableList = "@Url.Action("GetListsPerson", "Person")";
            genericLoadDataTable({
                pDataTableId: "#tbGrid",
                pColumns: datatableColumns,
                pUrl: vPersonDataTableList,
                pUrlParams: {
                    genericSearch: $('#GenericSearch').val() ? $('#GenericSearch').val() : null,
                },
                pRequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                });
        };

            //$("#GenericSearch").keypress(function (event) {
            //    if (event.keyCode === 13) {
            //        if ($("#GenericSearch").length) {
            //            loadDataTable();
            //        }
            //    }
            //});

            //$('#buttonSearch').on('click', function () {
            //    if ($("#GenericSearch").length) {
            //        loadDataTable();
            //    }
            //});

        });
    </script>
}